set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR ARM)

set(TOOLCHAIN_PREFIX arm-none-eabi-)
if(CYGWIN OR WIN32)
    set(TOOLCHAIN_SURFIX .exe)
else()
    set(TOOLCHAIN_SURFIX)
endif()

include(${CMAKE_CURRENT_LIST_DIR}/../../../define.cmake)

if(${CONFIG_DYN_LOAD_SELECT} EQUAL 0)
  if(MINGW OR CYGWIN OR WIN32)
      set(UTIL_SEARCH_CMD where)
  elseif(UNIX OR APPLE)
      set(UTIL_SEARCH_CMD which)
  endif()

  execute_process(
    COMMAND ${UTIL_SEARCH_CMD} ${TOOLCHAIN_PREFIX}gcc
    OUTPUT_VARIABLE BINUTILS_PATH
    OUTPUT_STRIP_TRAILING_WHITESPACE
  )

  string(REGEX REPLACE "\n.*" "" BINUTILS_PATH ${BINUTILS_PATH})
  get_filename_component(ARM_TOOLCHAIN_DIR ${BINUTILS_PATH} DIRECTORY)
else()
    if(CYGWIN OR WIN32)
        set(ARM_TOOLCHAIN_DIR ${CMAKE_CURRENT_LIST_DIR}/../prebuilts/windows/gcc-arm-none-eabi-8-2023-q2-update/bin)
    else()
        set(ARM_TOOLCHAIN_DIR ${CMAKE_CURRENT_LIST_DIR}/../prebuilts/linux/gcc-arm-none-eabi-8-2023-q2-update/bin)
    endif()
    set(BINUTILS_PATH ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc)
endif()

set(CMAKE_C_COMPILER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}gcc${TOOLCHAIN_SURFIX})
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
set(CMAKE_CXX_COMPILER ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}g++${TOOLCHAIN_SURFIX})

set(CMAKE_C_FLAGS_DEBUG_INIT "-g3 -Og -Wall -pedantic -DDEBUG")
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG_INIT}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELEASE_INIT "")
set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE_INIT}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_MINSIZEREL_INIT "-Os -Wall")
set(CMAKE_C_FLAGS_MINSIZEREL "${CMAKE_C_FLAGS_MINSIZEREL_INIT}" CACHE STRING "" FORCE)
set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT  "-O2 -g -Wall")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_ASM_FLAGS_RELWITHDEBINFO_INIT}" CACHE STRING "" FORCE)

set(CMAKE_OBJCOPY ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objcopy CACHE INTERNAL "objcopy tool")
set(CMAKE_SIZE_UTIL ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}size CACHE INTERNAL "size tool")
set(CMAKE_OBJDUMP_UTIL ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}objdump CACHE INTERNAL "objdump tool")
set(CMAKE_READELF_UTIL ${ARM_TOOLCHAIN_DIR}/${TOOLCHAIN_PREFIX}readelf CACHE INTERNAL "readelf tool")

set(CMAKE_SYSROOT ${ARM_TOOLCHAIN_DIR}/../arm-none-eabi)
set(CMAKE_FIND_ROOT_PATH ${BINUTILS_PATH})
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
