#pragma once

#include <stdint.h>
#include "sys_mem.h"
#include "adc.h"
#include "sema.h"

#define ADC_RANGE_VBAT  55UL

extern uint8_t g_ADCVref;
extern uint8_t g_ADCRange;

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！获取adc参考电压，并读取相应的校准参数        
*****************************************************************************************************/
void get_adc_caliv();

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！供底层快速读取当前芯片温度，不走标准HAL接口      
*****************************************************************************************************/
int16_t get_adc_temp_quickly();

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！供底层快速读取当前芯片电压，不走标准HAL接口      
*****************************************************************************************************/
int16_t get_adc_vbat_quickly();

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！用于开启AD转换时，需要使用的TRXBG与BBLDO时钟  
* @attention 在HRC 4分频时，且相关代码位于RAM上时，耗时 90us   
*****************************************************************************************************/
void ADC_Set_Trxbg_Bbldo();

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！关闭TRXBG时钟  
* @attention 在HRC 4分频时，且相关代码位于RAM上时，耗时 8us   
*****************************************************************************************************/
void ADC_Reset_Trxbg(void);

extern uint8_t g_gpio13_2V;
/*****************************************************************************************************
 * @brief:  配置GPIO13，使其输出2.2V电压
 * @param:  NA
 * @retval: NA
 * @attention：此功能相关寄存器会在深睡时掉电，故在深睡唤醒时，需要重新调用
*****************************************************************************************************/
void Sp_Gpio13_2V_En(void);

/*****************************************************************************************************
* @brief   关闭GPIO13 2V电压输出，输出0V
* @param :  NA
* @return   NA
* 注意：此功能相关寄存器会在深睡时掉电，故在深睡唤醒时，需要重新配置
*****************************************************************************************************/
void Sp_Gpio13_2V_Dis(void);

/*****************************************************************************************************
 * @brief  获取指定单通道ADC的采样值
 * @param  Channel 详情参考 @ref ADC_CHANNEL_TypeDef.
 * @retval 若返回温度信息，单位为摄氏度；若返回电压信息，单位为mV；若入参错误返回-32768.
*****************************************************************************************************/
int16_t ADC_Single_GetValue(ADC_CHANNEL_TypeDef Channel);

//指示ADC扫描模式下，ADC通道的最大支持个数
#define ADC_SCAN_MAX_CHANNELS (5) 

/**
 * @brief ADC扫描模式控制结构体
 **/
typedef struct
{
	uint8_t ScanNum;                                 //ADC扫描模式的通道个数
	volatile uint8_t Channel[ADC_SCAN_MAX_CHANNELS]; //ADC扫描模式的待采样通道号，详情参考 @ref ADC_CHANNEL_TypeDef.
    volatile int16_t Value[ADC_SCAN_MAX_CHANNELS];   //ADC扫描模式的通道采样值，与通道号一一对应
} ADC_Scan_HandleTypeDef;

/**
 * @brief  ADC使用扫描模式获取指定多通道的采样值
 * @param  pAdcScan 详情参考 @ref ADC_Scan_HandleTypeDef.
 * @return 0:成功，-32768:失败
 */
int16_t ADC_Scan_GetValue(ADC_Scan_HandleTypeDef *pAdcScan);

/*****************************************************************************************************
* @brief  仅限芯翼平台内部使用！立即关闭trxbg，仅用在睡眠前  
*****************************************************************************************************/
void ADC_Trxbg_InstantClose(void);

/*****************************************************************************************************
* @brief  避免trxbg短时间内的频繁关闭,间隔1ms,依赖aptick计数功能     
*****************************************************************************************************/
void ADC_Trxbg_SafelyClose(void);