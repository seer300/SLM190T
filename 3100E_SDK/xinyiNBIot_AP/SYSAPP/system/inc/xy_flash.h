/*****************************************************************************************************************************
 * @brief  flash操作接口。目前AP核仅FOTA区域向后的区域容许擦写，其他flash空间擦写将异常返回。
 *
 * @warning 由于芯翼双核共抢使用flash控制器，进而当CP核启动后擦写flash时，会挂起AP核几百毫秒。
 *          OPENCPU版本BAN_WRITE_FLASH配置为1，即不容许在启动CP核后实时写FLASH。
 *****************************************************************************************************************************/

#pragma once

#include "hal_def.h"
#include "qspi_flash.h"



/*****************************************************************************************************************************
 * @brief 初始化Flash,用户无需关注
 ****************************************************************************************************************************/
void xy_Flash_Init(void);



/*****************************************************************************************************************************
 * @brief 从Flash读取数据，一个扇区4K字节，6.5M主频下耗时5.40ms,36.8M下耗时1.5ms。
 * @param addr flash地址
 * @param data RAM地址
 * @param size 读取长度
 ****************************************************************************************************************************/
bool xy_Flash_Read(uint32_t addr, void *data, uint32_t size);



/*****************************************************************************************************************************
 * @brief 擦除flash，一个扇区4K字节，6.5M主频下耗时37.51ms.
 * @param addr flash地址，需4K字节对齐
 * @param size 擦除flash的长度，传入长度如果不是4K整数倍则强制向上对齐到4K整数倍
 * @warning  OPENCPU版本BAN_WRITE_FLASH配置为1，即不容许在启动CP核后实时写FLASH。
 *           当CP核运行后，该接口会通过核间消息通知CP核执行FLASH动作，耗时达几百毫秒，期间AP核关中断，易造成丢中断或延时处理，建议避免执行FLASH擦写操作。
 *           可以在Stop_CP()后或者Into_Dslp_Hook_Regist()里执行擦写FLASH动作。
 ****************************************************************************************************************************/
bool xy_Flash_Erase(uint32_t addr, uint32_t size);



/*****************************************************************************************************************************
 * @brief 向Flash写入数据.内部先读后写，保证不改变同一扇区内其他位置的数据内容。一个扇区4K字节，6.5M主频下耗时40.34ms
 * @param addr  flash地址
 * @param data  RAM地址
 * @param size  长度
 * @note 由于异常断电会造成Flash内容损坏，所以客户必须自行添加头尾校验位来确保内容的有效性. 
 * @warning  OPENCPU版本BAN_WRITE_FLASH配置为1，即不容许在启动CP核后实时写FLASH。
 *           当CP核运行后，该接口会通过核间消息通知CP核执行FLASH动作，耗时达几百毫秒，期间AP核关中断，易造成丢中断或延时处理，建议避免执行FLASH擦写操作。
 *           可以在Stop_CP()后或者Into_Dslp_Hook_Regist()里执行擦写FLASH动作。
 ****************************************************************************************************************************/
bool xy_Flash_Write(uint32_t addr, void *data, uint32_t size);



/*****************************************************************************************************************************
 * @brief 直接向Flash指定位置写入数据.一个扇区4K字节，6.5M主频下耗时6.75ms.
 * @param addr  flash地址
 * @param data  RAM地址
 * @param size  长度
 * @note 由用户先通过xy_Flash_Erase接口执行大面积擦除动作后，再通过该接口顺序分步写入内容。通常用于FOTA差分包保存/dump信息保存等特殊流程。
 * @warning  OPENCPU版本BAN_WRITE_FLASH配置为1，即不容许在启动CP核后实时写FLASH。
 *           当CP核运行后，该接口会通过核间消息通知CP核执行FLASH动作，耗时达几百毫秒，期间AP核关中断，易造成丢中断或延时处理，建议避免执行FLASH擦写操作。
 *           可以在Stop_CP()后或者Into_Dslp_Hook_Regist()里执行擦写FLASH动作。
 ****************************************************************************************************************************/
bool xy_Flash_Write_No_Erase(uint32_t addr, void *data, uint32_t size);






